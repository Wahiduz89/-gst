// prisma/schema.prisma - Production Ready Schema for Supabase

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String    @id @default(cuid())
  name              String
  email             String    @unique
  password          String
  businessName      String    @default("")
  businessAddress   String    @default("")
  businessGST       String?
  businessPAN       String?
  businessPhone     String?
  businessEmail     String?
  businessState     String    @default("Assam")
  businessLogo      String?   // Cloudinary URL
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  invoices          Invoice[]
  customers         Customer[]
  
  @@index([email])
}

model Customer {
  id         String    @id @default(cuid())
  name       String
  gstNumber  String?
  panNumber  String?
  address    String
  phone      String?
  email      String?
  state      String    @default("")
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  invoices   Invoice[]
  
  @@index([userId])
  @@index([name])
  @@index([gstNumber])
}

model Invoice {
  id              String          @id @default(cuid())
  invoiceNumber   String          @unique
  invoiceDate     DateTime        @default(now())
  userId          String
  customerId      String?
  customerName    String
  customerGST     String?
  customerAddress String
  customerPhone   String?
  customerEmail   String?
  businessState   String          @default("Assam")
  customerState   String          @default("")
  subtotal        Decimal         @db.Decimal(10, 2)
  cgst            Decimal         @db.Decimal(10, 2)
  sgst            Decimal         @db.Decimal(10, 2)
  igst            Decimal         @db.Decimal(10, 2)
  totalAmount     Decimal         @db.Decimal(10, 2)
  isInterState    Boolean         @default(false)
  status          InvoiceStatus   @default(DRAFT)
  dueDate         DateTime?
  termsConditions String?         @db.Text
  notes           String?         @db.Text
  paymentStatus   PaymentStatus   @default(PENDING)
  paidAmount      Decimal         @default(0) @db.Decimal(10, 2)
  paymentDate     DateTime?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  customer        Customer?       @relation(fields: [customerId], references: [id], onDelete: SetNull)
  items           InvoiceItem[]
  
  @@index([userId])
  @@index([customerId])
  @@index([invoiceNumber])
  @@index([status])
  @@index([createdAt])
  @@index([invoiceDate])
  @@index([paymentStatus])
}

model InvoiceItem {
  id                String    @id @default(cuid())
  invoiceId         String
  description       String
  quantity          Decimal   @db.Decimal(10, 2)
  rate              Decimal   @db.Decimal(10, 2)
  amount            Decimal   @db.Decimal(10, 2)
  gstRate           Decimal   @db.Decimal(5, 2)
  cgst              Decimal   @db.Decimal(10, 2)
  sgst              Decimal   @db.Decimal(10, 2)
  igst              Decimal   @db.Decimal(10, 2)
  totalAmount       Decimal   @db.Decimal(10, 2)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  invoice           Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@index([invoiceId])
}

enum InvoiceStatus {
  DRAFT
  GENERATED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PARTIAL
  PAID
}