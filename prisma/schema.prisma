// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  businessName  String    @default("")
  businessAddress String  @default("")
  businessGST   String?
  businessPhone String?
  businessEmail String?
  businessState String    @default("Assam")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  invoices      Invoice[]
  customers     Customer[]
}

model Customer {
  id         String    @id @default(cuid())
  name       String
  gstNumber  String?
  address    String
  phone      String?
  email      String?
  state      String    @default("")
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  invoices   Invoice[]
  
  @@index([userId])
  @@index([name])
  @@index([gstNumber])
}

model Invoice {
  id              String          @id @default(cuid())
  invoiceNumber   String          @unique
  userId          String
  customerId      String
  businessState   String          @default("Assam")
  customerState   String          @default("")
  subtotal        Decimal         @db.Decimal(10, 2)
  cgst            Decimal         @db.Decimal(10, 2)
  sgst            Decimal         @db.Decimal(10, 2)
  igst            Decimal         @db.Decimal(10, 2)
  totalAmount     Decimal         @db.Decimal(10, 2)
  status          InvoiceStatus   @default(DRAFT)
  dueDate         DateTime?
  termsConditions String?
  notes           String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  customer        Customer        @relation(fields: [customerId], references: [id], onDelete: Cascade)
  items           InvoiceItem[]
  
  @@index([userId])
  @@index([customerId])
  @@index([invoiceNumber])
  @@index([status])
  @@index([createdAt])
}

model InvoiceItem {
  id            String    @id @default(cuid())
  invoiceId     String
  description   String
  quantity      Int
  rate          Decimal   @db.Decimal(10, 2)
  amount        Decimal   @db.Decimal(10, 2)
  gstRate       Decimal   @db.Decimal(5, 2)
  cgst          Decimal   @db.Decimal(10, 2)
  sgst          Decimal   @db.Decimal(10, 2)
  igst          Decimal   @db.Decimal(10, 2)
  totalAmount   Decimal   @db.Decimal(10, 2)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  invoice       Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@index([invoiceId])
}

enum InvoiceStatus {
  DRAFT
  GENERATED
  CANCELLED
}